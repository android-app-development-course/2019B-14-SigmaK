CREATE TABLE Account(
ID INTEGER PRIMARY KEY AUTOINCREMENT,
Email VARCHAR(30) NOT NULL UNIQUE,
UserName VARCHAR(20) NOT NULL UNIQUE,
Password VARCHAR(40) NOT NULL,
ProfilePhoto TEXT NOT NULL)

CREATE TABLE UserInfo(
UserInfoID INTEGER PRIMARY KEY AUTOINCREMENT,
AccountID INTEGER NOT NULL,
Follows INTEGER DEFAULT 0 NOT NULL,
Followers INTEGER DEFAULT 0 NOT NULL,
Coins INTEGER DEFAULT 0 NOT NULL,
Likes INTEGER DEFAULT 0 NOT NULL,
FOREIGN KEY (AccountID) references Account(ID) ON DELETE CASCADE)

CREATE TABLE PostInfo(
PostID INTEGER PRIMARY KEY AUTOINCREMENT,
Title TEXT NOT NULL,
Type VARCHAR(10) NOT NULL,
PostDate TIMESTAMP DEFAULT (datetime('now', 'localtime')) NOT NULL,
LastEditedDate TIMESTAMP DEFAULT (datetime('now', 'localtime')) NOT NULL,
Category VARCHAR(40) NOT NULL,
KeyWords TEXT NOT NULL,
AuthorID INTEGER NOT NULL,
Likes INTEGER DEFAULT 0 NOT NULL,
Reads INTEGER DEFAULT 0 NOT NULL,
Comments INTEGER DEFAULT 0 NOT NULL,
FOREIGN KEY (AuthorID) references Account(ID),)

CREATE TABLE Favourites(
FavouritesRecordID INTEGER PRIMARY KEY AUTOINCREMENT,
UserID INTEGER NOT NULL,
PostID INTEGER NOT NULL,
TYPE VARCHAR(10) NOT NULL,
FOREIGN KEY (UserID) references Account(ID) ON DELETE CASCADE,
FOREIGN KEY (PostID) references PostInfo(PostID) ON DELETE CASCADE)

CREATE TABLE Follow(
PK_id INTEGER PRIMARY KEY AUTOINCREMENT,
UserID INTEGER NOT NULL,
FollowerID INTEGER NOT NULL,
FollowDate TIMESTAMP DEFAULT (datetime('now', 'localtime')) NOT NULL,
LastEditedDate TIMESTAMP DEFAULT (datetime('now', 'localtime')) NOT NULL,
FOREIGN KEY (UserID) references Account(ID) ON DELETE CASCADE,
FOREIGN KEY (FollowerID) references Account(ID) ON DELETE CASCADE)

CREATE TABLE PostContent(
ContentID INTEGER PRIMARY KEY AUTOINCREMENT,
PostID INTEGER NOT NULL,
TextContent TEXT NOT NULL,
FOREIGN KEY (PostID) references PostInfo(PostID) ON DELETE CASCADE)

CREATE TABLE Comment(
CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
PostID INTEGER NOT NULL,
PostDate TIMESTAMP DEFAULT (datetime('now', 'localtime')) NOT NULL,
Likes INTEGER DEFAULT 0 NOT NULL,
Content TEXT NOT NULL,
FOREIGN KEY (PostID) references PostInfo(PostID) ON DELETE CASCADE)

CREATE TABLE AnswerInfo(
PK_id INTEGER PRIMARY KEY AUTOINCREMENT,
QuestionID INTEGER NOT NULL,
AnswerID INTEGER NOT NULL,
FOREIGN KEY (QuestionID) references PostInfo(PostID) ON DELETE CASCADE)


CREATE TABLE QuestionInfo(
PK_id INTEGER PRIMARY KEY AUTOINCREMENT,
PostID INTEGER NOT NULL,
Answers INTEGER DEFAULT 0 NOT NULL,
Status VARCHAR(20) DEFAULT 'NoFinished' NOT NULL,
StatisfiedAnswerIDs TEXT DEFAULT '-1' NOT NULL,
FOREIGN KEY (PostID) references PostInfo(PostID) ON DELETE CASCADE)

CREATE TABLE Likes(
PK_id INTEGER PRIMARY KEY AUTOINCREMENT,
PostID INTEGER NOT NULL,
UserID INTEGER NOT NULL,
FOREIGN KEY (PostID) references PostInfo(PostID) ON DELETE CASCADE,
FOREIGN KEY (UserID) references Account(ID) ON DELETE CASCADE)

CREATE TABLE Disapproves(
PK_id INTEGER PRIMARY KEY AUTOINCREMENT,
PostID INTEGER NOT NULL,
UserID INTEGER NOT NULL,
FOREIGN KEY (PostID) references PostInfo(PostID) ON DELETE CASCADE,
FOREIGN KEY (UserID) references Account(ID) ON DELETE CASCADE)

CREATE TABLE UserInterest(
PK_id INTEGER PRIMARY KEY AUTOINCREMENT,
UserID INTEGER NOT NULL,
Category VARCHAR(20) NOT NULL,
KeyWords TEXT DEFAULT 'empty' NOT NULL,
FOREIGN KEY (UserID) references Account(ID) ON DELETE CASCADE)



CREATE TABLE klb_log (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  log_comment varchar(512)
)

CREATE TABLE klb_log_food_maps (
  uid integer,
  did integer,
  PRIMARY KEY (uid,did),
  FOREIGN KEY (uid) references klb_log(id) ON DELETE CASCADE,
  FOREIGN KEY (did) references klb_food(id) ON DELETE CASCADE
)

CREATE TABLE klb_food (
  id integer,
  description varchar(255),
  PRIMARY KEY (id)
)

        db.execSQL("CREATE TABLE Diary(ID INTEGER PRIMARY KEY AUTOINCREMENT," +
                " CreateDate TIMESTAMP default (datetime('now', 'localtime')) NOT NULL" +
                ", Title TEXT NOT NULL, Content TEXT)");